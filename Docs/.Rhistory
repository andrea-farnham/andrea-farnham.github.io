quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
install.packages('shinylive')
install.packages("shinylive")
pak::pak("posit-dev/r-shinylive")
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
shiny::runApp('s')
getwd()
dir
dir()
runApp('s')
runApp('C:/Users/gorka/Gitlab_crs/afford/utilities/ShinyApps/Shiny_correlationExplorer/CorrExplorer_Shiny.R')
runApp('C:/Users/gorka/Gitlab_crs/afford/utilities/ShinyApps/Shiny_correlationExplorer/CorrExplorer_Shiny.R')
getwd()
runApp('C:/Users/gorka/Gitlab_crs/afford/utilities/ShinyApps/Shiny_correlationExplorer/CorrExplorer_Shiny.R')
runApp('C:/Users/gorka/Gitlab_crs/afford/utilities/ShinyApps/Shiny_correlationExplorer/CorrExplorer_Shiny.R')
runApp('C:/Users/gorka/Gitlab_crs/afford/utilities/ShinyApps/Shiny_correlationExplorer/CorrExplorer_Shiny.R')
library(ggplot2)
library(GGally)
library(ggExtra)
library(dplyr)
#Packages <- c("shiny","ggplot2","GGally","cowplot","dplyr","ggExtra","raster")
#apply(Packages, library, character.only = TRUE, invisible())
# read data
alldat <- read.csv('data.csv')
runApp('C:/Users/gorka/Gitlab_crs/afford/utilities/ShinyApps/Shiny_correlationExplorer/CorrExplorer_Shiny.R')
quarto::quarto_render()
library(pwr) # for power calcs
install.packages("pwr")
library(pwr) # for power calcs
library(dplyr) # for data manipulation
library(tidyr) # for data manipulation
library(ggplot2) # for plotting power curves
library(plotly) # for interactive power curves
install.packages("plotly")
library(pwr) # for power calcs
library(dplyr) # for data manipulation
library(tidyr) # for data manipulation
library(ggplot2) # for plotting power curves
library(plotly) # for interactive power curves
# Generate power calculations
ptab <- cbind(NULL, NULL)
for (i in seq(0,1, length.out = 200)){
pwrt1 <- pwr.t2n.test(n1 = 28, n2 = 1406,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt2 <- pwr.t2n.test(n1 = 144, n2 = 1290,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt3 <- pwr.t2n.test(n1 = 287, n2 = 1147,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt4 <- pwr.t2n.test(n1 = 430, n2 = 1004,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt5 <- pwr.t2n.test(n1 = 574, n2 = 860,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt6 <- pwr.t2n.test(n1 = 717, n2 = 717,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
ptab <- rbind(ptab, cbind(pwrt1$d, pwrt1$power,
pwrt2$d, pwrt2$power,
pwrt3$d, pwrt3$power,
pwrt4$d, pwrt4$power,
pwrt5$d, pwrt5$power,
pwrt6$d, pwrt6$power))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","n1=28, n2=1406.effect size","n1=28, n2=1406.power",
"n1=144, n2=1290.effect size","n1=144, n2=1290.power",
"n1=287, n2=1147.effect size","n1=287, n2=1147.power",
"n1=430, n2=1004.effect size","n1=430, n2=1004.power",
"n1=574, n2=860.effect size","n1=574, n2=860.power",
"n1=717, n2=717.effect size","n1=717, n2=717.power")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:13) %>%
separate(col = name, into = c("group", "var"), sep = "\.") %>%
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:13) %>%
separate(col = name, into = c("group", "var"), sep = "\.") %>%
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:13) %>%
separate(col = name, into = c("group", "var"), sep = "\\") %>%
spread(key = var, value = val)
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:13) %>%
separate(col = name, into = c("group", "var"), sep = ".") %>%
spread(key = var, value = val)
library(pwr) # for power calcs
library(dplyr) # for data manipulation
library(tidyr) # for data manipulation
library(ggplot2) # for plotting power curves
library(plotly) # for interactive power curves
# Generate power calculations
ptab <- cbind(NULL, NULL)
for (i in seq(0,1, length.out = 200)){
pwrt1 <- pwr.t2n.test(n1 = 28, n2 = 1406,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt2 <- pwr.t2n.test(n1 = 144, n2 = 1290,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt3 <- pwr.t2n.test(n1 = 287, n2 = 1147,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt4 <- pwr.t2n.test(n1 = 430, n2 = 1004,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt5 <- pwr.t2n.test(n1 = 574, n2 = 860,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt6 <- pwr.t2n.test(n1 = 717, n2 = 717,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
ptab <- rbind(ptab, cbind(pwrt1$d, pwrt1$power,
pwrt2$d, pwrt2$power,
pwrt3$d, pwrt3$power,
pwrt4$d, pwrt4$power,
pwrt5$d, pwrt5$power,
pwrt6$d, pwrt6$power))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","n1=28, n2=1406.effect size","n1=28, n2=1406.power",
"n1=144, n2=1290.effect size","n1=144, n2=1290.power",
"n1=287, n2=1147.effect size","n1=287, n2=1147.power",
"n1=430, n2=1004.effect size","n1=430, n2=1004.power",
"n1=574, n2=860.effect size","n1=574, n2=860.power",
"n1=717, n2=717.effect size","n1=717, n2=717.power")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:13) %>%
separate(col = name, into = c("group", "var"), sep = ".") %>%
spread(key = var, value = val)
library(pwr) # for power calcs
library(dplyr) # for data manipulation
library(tidyr) # for data manipulation
library(ggplot2) # for plotting power curves
library(plotly) # for interactive power curves
# Generate power calculations
ptab <- cbind(NULL, NULL)
for (i in seq(0,1, length.out = 200)){
pwrt1 <- pwr.t2n.test(n1 = 28, n2 = 1406,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt2 <- pwr.t2n.test(n1 = 144, n2 = 1290,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt3 <- pwr.t2n.test(n1 = 287, n2 = 1147,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt4 <- pwr.t2n.test(n1 = 430, n2 = 1004,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt5 <- pwr.t2n.test(n1 = 574, n2 = 860,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
pwrt6 <- pwr.t2n.test(n1 = 717, n2 = 717,
sig.level = 0.05, power = NULL,
d = i, alternative="two.sided")
ptab <- rbind(ptab, cbind(pwrt1$d, pwrt1$power,
pwrt2$d, pwrt2$power,
pwrt3$d, pwrt3$power,
pwrt4$d, pwrt4$power,
pwrt5$d, pwrt5$power,
pwrt6$d, pwrt6$power))
}
ptab <- cbind(seq_len(nrow(ptab)), ptab)
colnames(ptab) <- c("id","n1=28, n2=1406.effect size","n1=28, n2=1406.power",
"n1=144, n2=1290.effect size","n1=144, n2=1290.power",
"n1=287, n2=1147.effect size","n1=287, n2=1147.power",
"n1=430, n2=1004.effect size","n1=430, n2=1004.power",
"n1=574, n2=860.effect size","n1=574, n2=860.power",
"n1=717, n2=717.effect size","n1=717, n2=717.power")
# get data into right format for ggplot2
temp <- ptab %>%
as.data.frame() %>%
gather(key = name, value = val, 2:13) %>%
separate(col = name, into = c("group", "var"), sep = "\.") %>%
quarto::quarto_render()
getwd()
quarto::quarto_render(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'), language = "latex")
knitr::render_html(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'), language = "latex")
knitr::render_html(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'), language = "latex")
knitr::render_html(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex')
knitr::render_latex(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
knitr::read_chunk(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
quarto::quarto_preview()
file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex')
dir(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase'))
include_tex(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
install.packages("gretlR")
include_tex(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
gretlr::include_tex(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
library(gretlR)
gretlR::include_tex(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
readline(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
latex_text = readline(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
latex_text
latex_text = readLines(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
latex_text
install.packages("gretlR")
readLines(file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
getwd()
library(knitr)
fileinput
fileinput <- file.path('contents','reports','Collab_Primer_repoUseCase','main.Rtex')
fileinput
readLinesfileinput <- file.path(getwd(),'contents','reports','Collab_Primer_repoUseCase','main.Rtex')
fileinput
fileinput
getwd()
```{r readMyOverleaf, echo=FALSE}
fileinput <- file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex')
latex_text <- readLines(fileinput)
latex_text
quarto::quarto_render()
quarto::quarto_preview()
quarto::quarto_preview()
quarto::quarto_render()
quarto::quarto_preview()
tools::texi2pdf(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
tools::texi2pdf(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.tex'))
tools::texi2pdf(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
tools::texi2pdf(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.tex'))
knitr::knit(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
knitr::knit2html(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
knitr::knit2html(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
setwd('C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs/contents/reports/')
knitr::knit2html(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
knitr::knit2pdf(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
knitr::knit2pdf(file.path("C:/Users/gorka/Gitlab_crs/AFFORD_website/Docs",'contents','reports','Collab_Primer_repoUseCase','main.Rtex'))
fs::dir_tree('Z:/Projects/Spinco/SINEEG/Data/SiN/rawdata')
fs::dir_tree('Z:/Projects/Spinco/SINEEG/Data/SiN/sourcedata',recursive=)
quarto::quarto_render()
