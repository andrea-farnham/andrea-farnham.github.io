{
  "hash": "3a455a5f3ea5d8470fbf557b7d348a5e",
  "result": {
    "markdown": "---\ntitle: \"A data index\"\nsubtitle: \"A Quarto Markdown file with simple data index with R and Quarto\" \ndate: last-modified\ncategories:\n  - Quarto\n  - R\n  - Markdown\n  - YAML\nformat: \n  html:\n    code-tools: true\n    code-copy: true\neditor: \n    Visual: \n    wrap: 82\n---\n\n\n# \n\n:::{.style=\"background: whitesmoke\"}\n\n--- \ntitle: \"Page-title\"\nsubtitle: \"Page-subtitle\"\nauthor: \"author-name\"\naffiliation: \"affiliation-name\"\ndate: last-modified\nformat: html \n---\n\n\nFirst read the tables \n\n\n::: {.cell}\n\n```{.r .cell-code}\ninput_table_1 =  'table_filename.xlsx'  # specify fullpath if not in current dir\nsheet_subj  =     'table_filename.xlsx' # insert name of sheet in table\nmiss_val_spec =  c(\"\",\"N/A\")            # labels used to specify missing value\n```\n:::\n\n\n:::\n\nfolder_datapackage =              #insert name of subfolder (within the data folder) for this data package\n\n\n# Filenames\nfile_subj =                       # insert filename of table with subject info \nsheet_subj  =                     # insert name of sheet in table\n#\nfile_scanlist =                   # filename of table with scanlist\nsheet_scanlist  =                 # insert name of sheet in table\n\n# missing values definition \nlabels_missing_subj =c(\"\",\"N/A\") # labels used to specify missing value, first value is always: \"\"\nlabels_missing_scanlist =c(\"\",\"N/A\") # labels used to specify missing value, first value is always: \"\"    \n\n\n# Define columns of interest (key variables: column cell values should be identical across tables)\nsID_subj =                     # name of column identifying subject in subject file  e.g., 'Mouse ID (Pyrat)' \nsID_scans  =                # name of column identifying subject in scan list file e.g., 'Mouse ID'   \n  \n# ------------------------------------------------------------------------------------------------\n#```\n```\n\n\\#`{r ,loadpackages} # Libraries required for this page library(dplyr)      # for left_join and the 'pipe' function %>%  library(kableExtra) # for static table rendering  library(knitr)      # for executing code chunks NOTE! knitr must be >=  1.44 or DT won't work in Quarto library(DT)         # for the interactive table render library(crosstalk)  # for the filter panels of the interactive table #`\n\n<!-- The following code chunks create the metadata table. They are displayed later in this script with explanatory texts.  -->\n\n#\\`\\`\\`{r readFiles} \\# Read tables\n\ntbl_subj \\<- readxl::read_excel(path = file.path(dirname(getwd()),\n'\\_data',folder_datapackage,file_subj), sheet= sheet_subj,\nna=labels_missing_subj) print(paste0('table subjects: has' ,\nnrow(tbl_subj), ' rows and ',ncol(tbl_subj),' columns')) \\# tbl_scans\n\\<- readxl::read_excel(path = file.path(dirname(getwd()),\n'\\_data',folder_datapackage,file_scanlist), sheet= sheet_scanlist,\nna=labels_missing_scanlist)\n\nprint(paste0('table subjects: has' , nrow(tbl_scans), ' rows and\n',ncol(tbl_scans),' columns')) #\\`\\`\\`\n\n#\\`\\`\\`{r combineTables} \\# Make a common variable with subject\nidentifying variables (read as factor and not as number)\ntbl_subj\\[\\['subjID'\\]\\] \\<- as.factor(tbl_subj\\[\\[sID_subj\\]\\])\ntbl_scans\\[\\['subjID'\\]\\] \\<- as.factor(tbl_scans\\[\\[sID_scans\\]\\])\n\n# Join tables with the largest table on the left\n\ntbl_joined \\<- dplyr::full_join(x = tbl_subj, y = tbl_scans, by=\n'subjID', keep=FALSE)\n\ntbl_joined \\<- tbl_joined %\\>% relocate(\"subjID\",.before = 1)\nprint(paste0('table subjects: has' , nrow(tbl_joined), ' rows and\n',ncol(tbl_joined),' columns'))\n\n#\\`\\`\\`\n\n#\\`\\`\\`{r renderHub} #\\| column: page-left\n\n# Code to render an interactive table\n\n#------------------------------------------ \\# an object that will be\nshared by filter panels and datatable shared_joined \\<-\nSharedData\\$new(tbl_joined, key = \\~subjID, group = \"shared_obj\")\n\n# to make two columns one with filter panels and one with the table\n\nbscols(widths = c(2,10), device = c(\"xs\", \"sm\", \"md\", \"lg\"),\n\n# filter panels. Other formats are sliders and checkboxes https://rstudio.github.io/crosstalk/using.html\n\nlist( filter_select( id = \"subjID\", label = \"subject\",sharedData =\nshared_joined, group = \\~subjID) #filter_select( id = \"status\", label =\n\"status\",sharedData = shared_joined, group = \\~status), #filter_select(\nid = \"scanID\", label = \"scan\",sharedData = shared_joined, group =\n\\~scanID), #filter_select( id = \"desc\", label = \"description\",sharedData\n= shared_joined, group = \\~desc),\n#filter_checkbox(\"Sex\",\"Sex\",shared_joined, \\~Sex, inline = FALSE) ),\n\n# table\n\ninteractive_table \\<- datatable( shared_joined, #filter = \"top\", escape\n= FALSE, rownames = FALSE, width = \"100%\", class = 'compact cell-border\nhover', extensions = c('Buttons', 'Select','ColReorder', 'Scroller',\n'KeyTable'), selection = 'none', options = list( pageLength = 20, dom =\n'Bfrtip', #buttons = c('colvis','selectAll', 'selectNone', 'copy',\n'csv', 'pdf'),\\\nbuttons = list(list(extend = \"colvis\", text = \"select Columns\",\nbackground='yellow'), 'selectAll', 'selectNone', 'copy', 'csv', 'pdf'),\nselect = list(style = 'os', items = 'row'), scrollX = TRUE,\nscrollCollapse = FALSE,\\\nautoWidth = TRUE, colReorder = TRUE, columnDefs = list( list( keys =\nTRUE, search = list(regex = TRUE), targets=0 ) ) ) ) %\\>%\nformatStyle(colnames(tbl),backgroundColor = \"ivory\")\\\n)\n\n#\\`\\`\\`\n\n<!-- Below the content to be displayed-->\n\n::: {.panel-tabset .nav-pills}\n# Navigate data {.unnumbered}\n\n::: {.callout-tip style=\"font-size: 4px\"}\n## Instructions\n\nThe highlighted columns below correspond to the metadata table created\nfrom the filenames in the folder. Use the \\*filter boxes\\* to select\nwhich data are displayed. You can also \\*select Columns\\* to choose\nwhich columns are displayed or change the column order if you \\*click\nand drag\\* on the variable names. You can also \\*select\\* one or\nmultiple rows clicking on them or by using the \\*select\\* buttons. Click\non a thumbnail to open the full-size image.\n\nClick the button \\*Copy\\* to copy the filtered or selected rows to the\nclipboard. With the buttons \\*csv\\* or \\*pdf\\* you can save them to\nthese two formats.\n:::\n\n#\\`\\`\\`{r } #\\| include: true\n\n\\<<renderHub>\\>\n\n#\\`\\`\\`\n\n# Tutorials\n\nThis table was created combining two tables with the following code :\n\n#\\`\\`\\`{r } #\\| code-fold: show #\\| echo: true #\\| include: true\n\n\\<<readFiles>\\> \\<<combineTables>\\>\n\n#\\`\\`\\`\n:::\n\n\\`\\`\\`\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}