{
  "hash": "86bf5d0e734ff55e8e4c3674036c2122",
  "result": {
    "markdown": "---\ntitle: \"A data index\"\nsubtitle: \"Use R Quarto Markdown files to render an interactive table\" \ndate: last-modified\ncategories:\n  - Quarto\n  - R\n  - Markdown\n  - YAML\nformat: \n  html:\n    code-tools: true\n    code-copy: true\n---\n\n\n# Template 1 - Read Excel and Render Interactive\n\n:::{.panel-tabset}\n## Dynamic Report\n\nYou can copy the following content into an empty .qmd file, fill in your file paths and names when necessary and click 'render' in R studio (latest version recommended for better Quarto support). This will automatically save it as an .HTML file with the same filename in the same folder as the .qmd file. The libraries loaded with `library()` are additional R packages that first need to be installed with `install.packages()`. \n\n````         \n--- \n#title: \"Page-title\"\nsubtitle: \"Page-subtitle\"\nauthor: \"author-name\"\naffiliation: \"affiliation-name\"\ndate: last-modified\nformat: html \n---\n\n# Read metadata table\n\n```{{r readfiles}}\n#| code-fold: true   \nlibrary(openxlsx)\n\n# Manual inputs\ninput_table_1 =  'table_filename.xlsx'  # specify fullpath if not in current dir\nsheet_name  =     'sheetname' # insert name of sheet in table\nmiss_val_spec =  c(\"\",\"N/A\")            # labels used to specify missing value\n\n# read data\ntbl <- openxlsx::read.xlsx(xlsxFile = input_table_1,\n                           sheet = sheet_name,\n                           na.strings = c(\"\",\"N/A\"))\n``` \n\n# Render interactive table \n\n```{{r , renderTable}} \nlibrary(DT)             \n\ndatatable(\n    tbl,\n    filter = \"top\",\n    escape = FALSE,\n    rownames = FALSE,       \n    width = \"100%\",     \n    class = 'compact cell-border  hover',\n    extensions = c('Buttons', 'Select','ColReorder', 'Scroller',  'KeyTable'),\n    selection = 'none',\n    options = list(\n      pageLength = 10,       \n      dom = 'Bfrtip',\n      #buttons = c('colvis','selectAll', 'selectNone', 'copy', 'csv', 'pdf'),  \n      buttons = list(list(extend = \"colvis\", text = \"select Columns\"),\n                     'selectAll', 'selectNone', 'copy', 'csv', 'pdf'), \n      select = list(style = 'os', items = 'row'),\n      scrollX = TRUE,\n      scrollCollapse = FALSE,  \n      autoWidth = TRUE,\n      colReorder = TRUE,\n      columnDefs = list(\n        list(\n          keys = TRUE,\n          search = list(regex = TRUE),\n          targets=0\n        )\n      )\n      )\n  ) \n)\n\n\n```\n````\n\n## R script\nYou can copy the following content into an R script, fill in your file paths and run it. The libraries loaded with `library()` are additional R packages that first need to be installed with `install.packages()`. If using Rstudio yoiu can click export and 'save as web page' to save it as .HTML. \n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"false\"}\nlibrary(openxlsx)\nlibrary(DT)    \n\n# Manual inputs\ninput_table_1 =  'table_filename.xlsx'  # specify fullpath if not in current dir\nsheet_name  =     'sheetname' # insert name of sheet in table\nmiss_val_spec =  c(\"\",\"N/A\")            # labels used to specify missing value\n\n# read data\ntbl <- openxlsx::read.xlsx(xlsxFile = input_table_1,\n                           sheet = sheet_name,\n                           na.strings = c(\"\",\"N/A\"))\n \n         \n# Render table\ndatatable(\n    tbl,\n    filter = \"top\",\n    escape = FALSE,\n    rownames = FALSE,       \n    width = \"100%\",     \n    class = 'compact cell-border  hover',\n    extensions = c('Buttons', 'Select','ColReorder', 'Scroller',  'KeyTable'),\n    selection = 'none',\n    options = list(\n      pageLength = 10,       \n      dom = 'Bfrtip',\n     #buttons = c('colvis','selectAll', 'selectNone', 'copy', 'csv', 'pdf'),  \n      buttons = list(list(extend = \"colvis\", text = \"select Columns\"),\n                     'selectAll', 'selectNone', 'copy', 'csv', 'pdf'), \n      select = list(style = 'os', items = 'row'),\n      scrollX = TRUE,\n      scrollCollapse = FALSE,  \n      autoWidth = TRUE,\n      colReorder = TRUE,\n      columnDefs = list(\n        list(\n          keys = TRUE,\n          search = list(regex = TRUE),\n          targets=0\n        )\n      )\n      )\n  ) \n```\n:::\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}